
BasicGame.Preloader = function (game) {

  this.background = null;
  this.preloadBar = null;

  //this.ready = false;

};

BasicGame.Preloader.prototype = {

  preload: function () {

    //  Show the loading progress bar asset we loaded in Boot.js
    this.stage.backgroundColor = '#2d2d2d';

    this.preloadBar = this.add.sprite(412, 400, 'preloaderBar');
    this.add.text(510, 360, "Loading...", { font: "32px 'Army Wide', monospace", fill: "#fff" }).anchor.setTo(0.5, 0.5);
    //  This sets the preloadBar sprite as a loader sprite.
    //  What that does is automatically crop the sprite from 0 to full-width
    //  as the files below are loaded in.
    this.load.setPreloadSprite(this.preloadBar);

    //  Here we load the rest of the assets our game needs.
    this.load.image('titlepage', '<%= image_path 'titlepage.png' %>');
    this.load.image('sea', '<%= image_path 'sea.png' %>');
    this.load.image('bullet', '<%= image_path 'bullet.png' %>');
    this.load.image('enemyBullet', '<%= image_path 'enemy-bullet.png' %>');
    this.load.spritesheet('greenEnemy', '<%= image_path 'enemy.png' %>', 32, 32);
    this.load.spritesheet('whiteEnemy', '<%= image_path 'shooting-enemy.png' %>', 32, 32);
    this.load.spritesheet('boss', '<%= image_path 'boss.png' %>', 93, 75);
    this.load.spritesheet('explosion', '<%= image_path 'explosion.png' %>', 32, 32);
    this.load.spritesheet('player', '<%= image_path 'player.png' %>', 64, 64);
    this.load.spritesheet('pow1', '<%= image_path 'pow1.png' %>', 32, 32);
    this.load.spritesheet('pow2', '<%= image_path 'pow2.png' %>', 32, 32);
    this.load.spritesheet('bombBlast', '<%= image_path 'bomb-blast.png' %>', 1024, 768);
    this.load.spritesheet('bomb', '<%= image_path 'bomb.png' %>', 32, 32);
    this.load.audio('enemyDeath', ['atari_boom.wav']);
    this.load.audio('enemyFire', ['laser7.wav']);
    this.load.audio('playerDeath', ['atari_boom2.wav']);
    this.load.audio('playerFire', ['laser5.wav']);
    this.load.audio('pickup', ['laser6.wav']);
  },

  create: function () {

    //  Once the load has finished we disable the crop because we're going to sit in the update loop for a short while as the music decodes
    this.preloadBar.cropEnabled = false;

  },

  update: function () {

    //  You don't actually need to do this, but I find it gives a much smoother game experience.
    //  Basically it will wait for our audio file to be decoded before proceeding to the MainMenu.
    //  You can jump right into the menu if you want and still play the music, but you'll have a few
    //  seconds of delay while the mp3 decodes - so if you need your music to be in-sync with your menu
    //  it's best to wait for it to decode here first, then carry on.
    
    //  If you don't have any music in your game then put the game.state.start line into the create function and delete
    //  the update function completely.
    

    // if (this.cache.isSoundDecoded('titleMusic') && this.ready == false) {
    //   this.ready = true;
      this.state.start('MainMenu');
    // }
  }

};
